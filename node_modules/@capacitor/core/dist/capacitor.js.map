{"version":3,"file":"capacitor.js","sources":["../build/util.js","../build/runtime.js","../build/global.js","../build/core-plugins.js","../build/web-plugin.js","../build/legacy/legacy-web-plugin-merge.js"],"sourcesContent":["export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const getPlatform = () => getPlatformId(win);\n    const isNativePlatform = () => getPlatformId(win) !== 'web';\n    const isPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const getPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const registerPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { registerPlugin } from './global';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n//# sourceMappingURL=core-plugins.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map"],"names":["ExceptionCode","CapacitorException","Error","[object Object]","message","code","super","this","getPlatformId","win","_a","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","cap","Capacitor","Plugins","getPlatform","getPluginHeader","pluginName","PluginHeaders","find","h","name","registeredPlugins","Map","convertFileSrc","filePath","handleError","err","console","error","isNativePlatform","isPluginAvailable","plugin","get","platforms","has","pluginMethodNoop","_target","prop","Promise","reject","registerPlugin","jsImplementations","registeredPlugin","warn","proxy","platform","pluginHeader","jsImplementation","createPluginMethodWrapper","remove","wrapper","args","p","async","loadPluginImplementation","then","impl","fn","bind","Unimplemented","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","createPluginMethod","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","set","Set","keys","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","globalThis","self","window","global","WebView","config","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","listener","removeWindowListener","data","forEach","length","windowEventName","pluginEventName","handler","event","notifyListeners","msg","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","webPlugin","includes","legacyRegisterWebPlugin"],"mappings":"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"}